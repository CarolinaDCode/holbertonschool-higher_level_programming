The ``0-add_integer`` module
============================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(4, 10)
    14

    >>> add_integer(-6, 8)
    2

    >>> add_integer(-1, -2)
    -3

    >>> add_integer(10, -2)
    8

    >>> add_integer(5.23, 6)
    11

    >>> add_integer(12345, 54321)
    66666

    >>> add_integer('abcd', 5)
    Traceback (most recent call last):
    	      ...
    TypeError: a must be an integer

    >>> add_integer(5, 'abcd')
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer(float('inf'), 3)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(4, float('inf'))
    Traceback (most recent call last):
              ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'), 3)
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(4, float('nan'))
    Traceback (most recent call last):
              ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer()
    Traceback (most recent call last):
    	      ...
    TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

    >>> add_integer(1)
    Traceback (most recent call last):
    	      ...
    TypeError: add_integer() missing 1 required positional argument: 'b'
